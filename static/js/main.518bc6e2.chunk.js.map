{"version":3,"sources":["views/Error/Error.jsx","components/Footer/Footer.jsx","components/Header/Header.jsx","components/ViewContainer/ViewContainer.jsx","config/AppConfig.js","utils/enums/Source.js","utils/setupUrl.js","models/Image.js","models/User.js","services/UnsplashService.js","services/PixabayService.js","services/ImageService.js","components/Thumbnail/Thumbnail.jsx","components/HomeGrid/HomeGrid.jsx","views/Homepage/Homepage.jsx","config/Router.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Error","fluid","className","top","src","alt","window","location","href","to","theme","onClick","history","back","Footer","Date","getFullYear","Header","style","width","float","ViewContainer","props","children","AppConfig","pixabay","apiUrl","apiKey","unsplash","Source","setupUrl","urlStr","params","url","URL","Object","entries","forEach","p","searchParams","append","toString","Image","id","source","height","downloads","tags","siteUrl","imageUrl","user","this","User","name","profileLink","axios","interceptors","request","use","config","headers","authorization","UnsplashService","endpoints","getImages","page","get","per_page","order_by","then","res","data","map","i","mapData","responseImg","user_id","link","links","html","urls","raw","PixabayService","fetch","order","key","json","hits","imageHeight","imageWidth","userName","pageURL","largeImageURL","ImageService","services","Promise","all","s","flat","Thumbnail","image","HomeGrid","imgService","state","images","setState","img","idx","PureComponent","Homepage","AppRouter","exact","path","component","App","Router","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.518bc6e2.chunk.js","sourcesContent":["import React from 'react';\nimport './Error.scss';\nimport { Container, Card, CardBody, CardTitle, Button, CardImg } from 'shards-react';\nimport { Link } from 'react-router-dom';\n\nfunction Error() {\n  return <Container fluid>\n    <Card className=\"error-card position-absolute\">\n      <CardImg className=\"error-card-img\" top src=\"assets/img/raychan-PY3d9NScUP4-unsplash.jpg\" alt=\"Sad cat\" />\n\n      <CardBody>\n        <CardTitle>Page not found </CardTitle>\n        <p>Could not find anything at {window.location.href}.</p>\n\n        <div className=\"btn-container\">\n          <Link to=\"/\">\n            <Button>Home</Button>\n          </Link>\n\n          <Button theme=\"light\" onClick={() => window.history.back()}>Go back</Button>\n        </div>\n      </CardBody>\n    </Card>\n  </Container>;\n}\n\nexport default Error;\n","import React from 'react';\nimport './Footer.scss';\n\nfunction Footer() {\n  return <footer className=\"site-footer\">\n    Copyright &copy; {new Date().getFullYear()} by SÅ‚awomir Chabowski\n  </footer>;\n}\n\nexport default Footer;\n","import React from 'react';\nimport './Header.scss';\nimport { Container } from 'shards-react';\n\nfunction Header() {\n  return <Container fluid className=\"p-fixed fixed-top\">\n    <div className=\"bg-white shadow p-3 row align-items-center\">\n      <header className=\"col-10 col-sm-4 offset-sm-4\">\n        <a\n          href=\"/\"\n          className=\"logo-btn btn btn-text d-flex mx-sm-auto align-items-center px-0\"\n          style={{ width: 'min-content' }}\n        >\n          <img className=\"logo-img d-inline-block\" src=\"assets/img/logo.svg\" alt=\"Logo\" />\n          <h1 className=\"ml-2 my-0 h4 d-inline-block\">WallX</h1>\n        </a>\n      </header>\n\n      <div className=\"col-2 col-sm-4\">\n        <div style={{ float: 'right' }}>Search icon</div>\n      </div>\n\n    </div>\n  </Container>;\n}\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Footer from '../Footer/Footer';\nimport Header from '../Header/Header';\nimport './ViewContainer.scss';\n\n/**\n * @typedef {object} ViewContainerProps\n * @property {ReactNodeLike[]} children\n * @param {object} props \n */\nfunction ViewContainer(props) {\n  return <div className=\"site-container\">\n    <div>\n      <Header />\n      {props.children}\n    </div>\n\n    <Footer />\n  </div>;\n}\n\nViewContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default ViewContainer;\n","export const AppConfig = {\n  sources: {\n    pixabay: {\n      apiUrl: 'https://pixabay.com/api/',\n      apiKey: '16344050-36e14aaccf5abf36dcc90d8ec',\n    },\n    unsplash: {\n      apiUrl: 'https://api.unsplash.com',\n      apiKey: 'gktpONfj9LheQ3rMKlSO5San3B7-9vpGlp2aAAQLN3I',\n    },\n  },\n};\n","const Source = {\n  unsplash: 'UNSPLASH',\n  pixabay: 'PIXABAY',\n};\n\nexport default Source;\n","function setupUrl(urlStr, params) {\n  const url = new URL(urlStr);\n\n  if (params) {\n    Object.entries(params).forEach((p) => { url.searchParams.append(...p); });\n  }\n\n  return url.toString();\n}\n\nexport default setupUrl;\n","class Image {\n  constructor({ id, source, width, height, downloads, tags, siteUrl, imageUrl, user }) {\n    /**\n     * @var {string|number} id\n     */\n    this.id = id;\n\n    /**\n     * @var {Source}\n     */\n    this.source = source;\n\n    /**\n     * @var {number} width\n     */\n    this.width = width;\n\n    /**\n     * @var {number} height\n     */\n    this.height = height;\n\n    /**\n     * @var {number} downloads\n     */\n    this.downloads = downloads;\n\n    /**\n     * @var {number} tags\n     */\n    this.tags = tags;\n\n    /**\n     * @var {string} siteUrl\n     */\n    this.siteUrl = siteUrl;\n\n    /**\n     * @var {string} imageUrl\n     */\n    this.imageUrl = imageUrl;\n\n    /**\n     * @var {User} user\n     */\n    this.user = user;\n  }\n}\n\nexport default Image;\n","class User {\n  constructor({ id, name, profileLink }) {\n    /**\n     * @var {string|number} id\n     */\n    this.id = id;\n\n    /**\n     * @var {string} name\n     */\n    this.name = name;\n\n    /**\n     * @var {string} profileLink\n     */\n    this.profileLink = profileLink;\n  }\n}\n\nexport default User;\n","import { AppConfig } from '../config/AppConfig';\nimport Source from '../utils/enums/Source';\nimport setupUrl from '../utils/setupUrl';\nimport axios from 'axios';\nimport Image from '../models/Image';\nimport User from '../models/User';\n\naxios.interceptors.request.use((config) => {\n  config.headers.authorization = `Client-ID ${AppConfig.sources.unsplash.apiKey}`;\n\n  return config;\n});\n\nclass UnsplashService {\n  constructor() {\n    this.apiUrl = AppConfig.sources.unsplash.apiUrl;\n    this.apiKey = AppConfig.sources.unsplash.apiKey;\n    this.endpoints = { getImages: 'photos' };\n  }\n\n  /**\n   * @param {number} page\n   * @returns {Promise<Image[]>}\n   */\n  getImages(page = 1) {\n    return axios.get(setupUrl(`${this.apiUrl}/${this.endpoints.getImages}`, {\n      per_page: 50,\n      order_by: 'popular',\n      page,\n    })).then(res => res.data.map(i => this.mapData(i)));\n  }\n\n  /**\n   * @param {object} responseImg\n   * @returns {Image[]}\n   */\n  mapData(responseImg) {\n    const { id, width, height, downloads, tags } = responseImg;\n    const { user_id, name, link } = responseImg.user;\n    const siteUrl = responseImg.links.html;\n    const imageUrl = responseImg.urls.raw;\n\n    return new Image({\n      source: Source.unsplash,\n      id,\n      width,\n      height,\n      downloads,\n      tags,\n      siteUrl,\n      imageUrl,\n      user: new User({\n        id: user_id,\n        profileLink: link,\n        name,\n      }),\n    });\n  }\n}\n\nexport default UnsplashService;\n","// import axios from 'axios';\nimport { AppConfig } from '../config/AppConfig';\nimport setupUrl from '../utils/setupUrl';\nimport Source from '../utils/enums/Source';\nimport Image from '../models/Image';\nimport User from '../models/User';\n\n// axios.interceptors.request.use((config) => {\n//   config.url = setupUrl(config.url, { key: AppConfig.sources.pixabay.apiKey });\n//   config.headers = {\n//     ...config.headers,\n//     'Access-Control-Allow-Origin': '*',\n//   };\n\n//   return config;\n// });\n\nclass PixabayService {\n  constructor() {\n    this.apiUrl = AppConfig.sources.pixabay.apiUrl;\n  }\n\n  // getImages(page = 1) {\n  //   return axios.get(setupUrl(this.apiUrl, { per_page: 50, order: 'popular', page }))\n  //     .then(res => res.data.hits.map(i => this.mapData(i)));\n  // }\n\n  /**\n   * @param {number} page \n   * @returns {Promise<Image[]>}\n   */\n  getImages(page = 1) {\n    return fetch(setupUrl(this.apiUrl, { per_page: 50, order: 'popular', page, key: AppConfig.sources.pixabay.apiKey }))\n      .then(res => res.json())\n      .then(data => data.hits.map(i => this.mapData(i)));\n  }\n\n  /**\n   * @param {object} responseImg\n   * @returns {Image[]}\n   */\n  mapData(responseImg) {\n    const {\n      id,\n      downloads,\n      tags,\n      user_id,\n      imageHeight: height,\n      imageWidth: width,\n      user: userName,\n      pageURL: siteUrl,\n      largeImageURL: imageUrl,\n    } = responseImg;\n\n    return new Image({\n      source: Source.pixabay,\n      id,\n      width,\n      height,\n      downloads,\n      tags,\n      siteUrl,\n      imageUrl,\n      user: new User({\n        id: user_id,\n        name: userName,\n        profileLink: `https://pixabay.com/users/${userName}-${user_id}`,\n      }),\n    });\n  }\n}\n\nexport default PixabayService;\n","import UnsplashService from './UnsplashService';\nimport PixabayService from './PixabayService';\n\n/**\n * @typedef {object} AbstractImageService\n * @property {function(number): Promise<object[]>} getImages\n */\n\nclass ImageService {\n  constructor() {\n    /**\n     * @var {AbstractImageService[]} services\n     */\n    this.services = [\n      new UnsplashService(),\n      new PixabayService(),\n    ];\n  }\n\n  async getImages(page = 1) {\n    return Promise.all(this.services.map(s => s.getImages(page)))\n      .then(data => data.flat());\n  }\n}\n\nexport default ImageService;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Thumbnail.scss';\n\nfunction Thumbnail(props) {\n  return <div className=\"p-1\">\n    <a className=\"d-block overflow-hidden\">\n      <img src={props.image.imageUrl} className=\"w-100 thumbnail\" alt={props.image.id} />\n    </a>\n  </div>;\n}\n\nThumbnail.propTypes = {\n  image: PropTypes.object.isRequired,\n};\n\nexport default Thumbnail;\n","import React, { PureComponent } from 'react';\nimport './HomeGrid.scss';\nimport ImageService from '../../services/ImageService';\nimport { Container } from 'shards-react';\nimport Thumbnail from '../Thumbnail/Thumbnail';\n\nclass HomeGrid extends PureComponent {\n  constructor() {\n    super();\n    this.imgService = new ImageService();\n    this.state = { images: [] };\n  }\n\n  componentDidMount() {\n    this.getImages();\n  }\n\n  async getImages(page = 1) {\n    this.setState({ images: await this.imgService.getImages(page) });\n  }\n\n  render() {\n    return <>\n      <Container fluid className=\"pl-5 pt-5 pb-3\">\n        <h3>Trending wallpapers</h3>\n      </Container>\n      <div className=\"main-view-container mx-1 mx-md-4\">\n        {this.state.images.map((img, idx) => <Thumbnail image={img} key={idx} />)}\n      </div>\n    </>;\n  }\n}\n\nexport default HomeGrid;\n","import React from 'react';\nimport ViewContainer from '../../components/ViewContainer/ViewContainer';\nimport HomeGrid from '../../components/HomeGrid/HomeGrid';\n\nfunction Homepage() {\n  return <ViewContainer>\n    <HomeGrid />\n  </ViewContainer>;\n}\n\nexport default Homepage;\n","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport Error from '../views/Error/Error';\nimport Homepage from '../views/Homepage/Homepage';\n\nfunction AppRouter() {\n  return <HashRouter>\n    <Switch>\n      <Route exact path=\"/\" component={Homepage} />\n\n      <Route component={Error} />\n    </Switch>\n  </HashRouter>;\n}\n\nexport default AppRouter;\n","import React from 'react';\nimport Router from './config/Router';\n\nfunction App() {\n  return <Router />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './assets/css/global.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}